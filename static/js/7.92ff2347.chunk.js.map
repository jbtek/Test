{"version":3,"sources":["components/NoDataORError.js","services/Services.js","hooks/useDataApi.js","containers/Home.js","components/Chart.js","utils/Utils.js"],"names":["NoDataORError","message","errorMsg","len","isLoading","elm","className","API","axiosInstance","axios","create","baseURL","headers","preflightContinue","makeApiCall","url","data","method","params","console","log","getApi","postApi","putApi","deleteApi","qParams","a","useDataApi","apiUrl","useState","newData","setNewData","setIsLoading","setError","useEffect","apiResponse","fetchData","Home","mappedData","length","convertStrArrayToObjArray","type","Chart","CandleStickChart","this","props","width","ratio","xAccessor","d","date","xExtents","last","height","margin","left","right","top","bottom","seriesName","xScale","scaleTime","id","yExtents","high","low","axisAt","orient","ticks","timeIntervalBarWidth","utcDay","React","Component","defaultProps","fitWidth","arr","sortedArray","map","item","reduce","trim","split","slice","sort","b","ascending","acc","cur","i","key","strDate","milliseconds","parseInt","Date","getISTDate"],"mappings":"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","file":"static/js/7.92ff2347.chunk.js","sourcesContent":["import React from 'react'\nconst NoDataORError = ({message}) => {\nconst {errorMsg, len, isLoading} = message;\nlet elm = len === 0 ? \n(<div className='nodata-found'>Data records: {len}</div>): <div className='error-found'>Error fetching data: {errorMsg}</div>\n if(isLoading){\n     elm = <div className='nodata-found'>Data is fetching.....</div>\n }   \n\nreturn(\n        elm\n    )\n}\n\nexport default NoDataORError","import axios from 'axios'\nconst API = {\n    GET: 'get',\n    POST: 'post',\n    PUT: 'put',\n    DELETE: 'delete'\n}\n/**\n * set the base url for all the REST\n */\nexport const axiosInstance = axios.create({\n    baseURL: 'http://kaboom.rksv.net/api/',\n    headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000',\n        'Content-Type': 'application/json',\n      },\n      preflightContinue:true\n  });\n\nexport const makeApiCall = (url,data,method,params) => {\n    switch(method){\n        case API.GET:\n            console.log('GET CALLED');\n            return getApi(url,params);\n        case API.POST:\n            return postApi(url,data);\n        case API.PUT:\n            return putApi(url,data);\n        case API.DELETE:\n            return deleteApi(url,data);\n            \n        default:\n            return getApi(url, data, params);\n    }\n}\nexport const getApi = async(url,qParams) => {\n    return axiosInstance({\n        'url':url,\n        'params': qParams,\n        'method':API.GET\n    })\n}\n\nexport const postApi = async(url,data) => {\n    return axiosInstance({\n        'url':url,\n        'method':API.POST,\n        'data':data\n    })\n}\n\nexport const putApi = async(url,data) => {\n    return axiosInstance({\n        'url':url,\n        'method':API.PUT,\n        'data':data\n    })\n}\n\nexport const deleteApi = async(url,data,qParams) => {\n    return axiosInstance({\n        'url':url,\n        'method':API.DELETE,\n        'data':data\n    })\n}","import {useState, useEffect} from 'react';\nimport {makeApiCall} from '../services/Services'\n\n/**\n * \n * @param {*} data \n * @param {*} api \n * @param {*} method \n * this hooks is common to make any CRUD(GET POST,PUT,DELETE) operation just need to pass\n * these three params;\n */\nconst useDataApi = (data,apiUrl,method, params) => {\n    const [newData, setNewData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [errorMsg, setError] = useState('');\n\n    /**\n     * call useEffect here that takes a call back function and work like\n     * life cycles of statefull component:\n     * componentDidMount, componentDidUpdate, componentWillUnmount\n     * Note: Do not put useEffect in any conditional blocks its always on top.\n     * */\n    useEffect(() => {\n        //safe to call any api or subscribe some observable or event.\n        const fetchData = async () => {\n            setIsLoading(true);\n            setError(null);\n            try{\n            const apiResponse = await makeApiCall(apiUrl, data, method, params)\n            setNewData(apiResponse.data);\n            setIsLoading(false);\n            } catch(error){\n                setError(error.message);\n            }\n        }\n        fetchData();\n\n    },[]); \n\n    //return the object with this updated values.\n    return {isLoading, newData, errorMsg}\n}\n\nexport default useDataApi","import React from 'react'\nimport Chart from '../components/Chart';\nimport NoDataORError from '../components/NoDataORError';\nimport useDataApi from '../hooks/useDataApi'\nimport {convertStrArrayToObjArray} from '../utils/Utils';\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nconst Home = () => {\nconst params = {\n    'interval':1\n}\nconst {isLoading, newData, errorMsg} = useDataApi(null,'historical','get', params);\nlet mappedData = newData.length ? convertStrArrayToObjArray(newData,['date','open','high','low','close','volume']): []\nlet elm = <TypeChooser>\n{type => <Chart type={type} data={mappedData} />}\n</TypeChooser>\nif(errorMsg || newData.length === 0 || isLoading){\n    const len = newData.length;\n    const message = {errorMsg, len, isLoading}\n    elm = <NoDataORError message={message}/>\n}\nreturn(elm)\n}\n\nexport default Home","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n\nclass CandleStickChart extends React.Component {\n\trender() {\n\t\tconst { type, width, data, ratio } = this.props;\n\t\tconst xAccessor = d => d.date;\n\t\tconst xExtents = [\n\t\t\txAccessor(last(data)),\n\t\t\txAccessor(data[data.length - 100])\n\t\t];\n\t\treturn (\n\t\t\t<ChartCanvas height={400}\n\t\t\t\t\tratio={ratio}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tmargin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\t\tdata={data}\n\t\t\t\t\txAccessor={xAccessor}\n\t\t\t\t\txScale={scaleTime()}\n\t\t\t\t\txExtents={xExtents}>\n\n\t\t\t\t<Chart id={1} yExtents={d => [d.high, d.low]}>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\n\t\t\t\t\t<CandlestickSeries width={timeIntervalBarWidth(utcDay)}/>\n\t\t\t\t</Chart>\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChart.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChart.defaultProps = {\n\ttype: \"svg\",\n};\nCandleStickChart = fitWidth(CandleStickChart);\n\nexport default CandleStickChart;\n","import {ascending} from 'd3-array';\n\n/**\n * convert string to array and create object with given props\n * @param {*} str \n */\n export const convertStrArrayToObjArray = (arr, props = []) => {\n    if(!arr.length && !props.length) return [];\n    arr = arr.map(item => {\n        if(item){\n            item = reduce(props, item.trim().split(','));\n        }\n        return item;\n    });\n    \n    const sortedArray = arr.slice().sort((a, b) => ascending(a.date, b.date))\n    return sortedArray;\n}\n\n/**\n * it returns object \n * @param {*} props \n * @param {*} arr \n */\nexport const reduce = (props, arr) => {\n    const obj = arr.reduce((acc, cur, i) =>{\n        const key = props[i];\n        if(key){\n            if(key === 'date'){\n                acc[key] = getISTDate(cur);\n            } else{\n                acc[key] = cur;\n            }\n        }\n        return acc;\n      }, {});\n      return obj;\n}\n\nexport function getISTDate(strDate) {\n    const milliseconds = parseInt(strDate);\n    const convertedDate = new Date(milliseconds);\n\treturn convertedDate\n}\n\n\n"],"sourceRoot":""}